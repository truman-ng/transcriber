#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
导出浏览器中 youtube.com / google.com 的最新 Cookie 为 Netscape cookies.txt
仅在本机运行！导出的文件非常敏感，请妥善保管。
"""
from __future__ import annotations

import argparse, sys, time, os
from http.cookiejar import Cookie
import browser_cookie3 as bc3

INCLUDES = ["youtube.com", "google.com"]  # 覆盖 accounts.google.com 等

def load_cookies(browser: str, cookie_file: str | None):
    # 依次尝试不同浏览器；如传入 cookie_file 则优先用该文件
    loaders = []
    if browser == "auto":
        loaders = [("firefox", bc3.firefox), ("chrome", bc3.chrome),
                   ("edge", bc3.edge), ("chromium", bc3.chromium),
                   ("brave", bc3.brave), ("opera", bc3.opera),
                   ("safari", bc3.safari)]
    else:
        func = getattr(bc3, browser, None)
        if not func:
            print(f"[ERR] 不支持的浏览器：{browser}", file=sys.stderr)
            sys.exit(2)
        loaders = [(browser, func)]

    last_err = None
    for name, func in loaders:
        try:
            if cookie_file:
                jar = func(cookie_file=cookie_file)
            else:
                jar = func()
            # 只要能取到一点 cookie 就算成功
            if list(jar):
                print(f"[OK] 从 {name} 读取到 {len(list(jar))} 条原始 Cookie")
                return jar, name
        except Exception as e:
            last_err = e
    print("[ERR] 读取浏览器 Cookie 失败。", last_err or "", file=sys.stderr)
    sys.exit(2)

def need(cookie: Cookie) -> bool:
    d = (cookie.domain or "").lstrip(".").lower()
    return any(d.endswith(x) for x in INCLUDES)

def to_netscape_line(cookie: Cookie) -> str:
    domain = cookie.domain
    include_sub = "TRUE" if domain.startswith(".") else "FALSE"
    path = cookie.path or "/"
    secure = "TRUE" if cookie.secure else "FALSE"
    # 过期时间：None 视为会话 Cookie，用 0
    expires = str(int(cookie.expires)) if cookie.expires else "0"
    name = cookie.name
    value = cookie.value
    return "\t".join([domain, include_sub, path, secure, expires, name, value])

def main():
    ap = argparse.ArgumentParser(description="导出 YouTube/Google Cookie 为 cookies.txt (Netscape)")
    ap.add_argument("--browser", default="auto",
                    help="指定浏览器：auto|firefox|chrome|edge|chromium|brave|opera|safari")
    ap.add_argument("--cookie-file", default=None,
                    help="（可选）指定浏览器 cookies 数据库文件路径，用于多配置文件场景")
    ap.add_argument("--outfile", default="cookies.txt",
                    help="输出文件（Netscape 格式）")
    args = ap.parse_args()

    jar, used = load_cookies(args.browser, args.cookie_file)

    selected = [c for c in jar if need(c)]
    if not selected:
        print("[ERR] 没有筛到 youtube.com / google.com 的 Cookie。请确认浏览器已登录并能观看会员视频。", file=sys.stderr)
        sys.exit(3)

    with open(args.outfile, "w", encoding="utf-8") as f:
        f.write("# Netscape HTTP Cookie File\n")
        f.write("# Generated by export_youtube_cookies.py at %d; DO NOT SHARE.\n" % int(time.time()))
        f.write("# Includes: %s\n" % ", ".join(INCLUDES))
        for c in selected:
            try:
                line = to_netscape_line(c)
                f.write(line + "\n")
            except Exception:
                # 跳过奇怪的条目
                pass

    # 粗略统计
    by_domain = {}
    for c in selected:
        d = c.domain.lstrip(".").lower()
        by_domain[d] = by_domain.get(d, 0) + 1

    print(f"[OK] 写入 {args.outfile} 成功，共 {len(selected)} 条；浏览器：{used}")
    for d, n in sorted(by_domain.items()):
        print(f"  - {d}: {n}")

if __name__ == "__main__":
    main()
